<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
         http://www.springframework.org/schema/tx
         http://www.springframework.org/schema/tx/spring-tx.xsd
          http://www.springframework.org/schema/aop
          http://www.springframework.org/schema/aop/spring-aop.xsd
          http://mybatis.org/schema/mybatis-spring
          http://mybatis.org/schema/mybatis-spring.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context.xsd">

    <!--      引入jdbc配置文件-->

    <context:property-placeholder location="jdbc.properties"/>
    <!--      配置数据源-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">

        <property name="driverClass" value="${driverClass}"></property>
        <property name="jdbcUrl" value="${url}"></property>
        <property name="user" value="${user}"></property>
        <property name="password" value="${password}"></property>
        <property name="initialPoolSize" value="${initpoolsize}"></property>
        <property name="minPoolSize" value="${minpoolsize}"></property>
        <property name="maxPoolSize" value="${maxpoolsize}"></property>
        <property name="acquireIncrement" value="${acquireIncrement}"></property>

    </bean>
    <!--      配置事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <!--      配置事务-->

    <!--    配置通知-->
    <tx:advice id="message" transaction-manager="transactionManager">
        <tx:attributes>
            <!--                read-only 是否只读     propagation  事务的传播行为       isolation 事务的隔离级别-->
            <tx:method name="select*" read-only="true" propagation="REQUIRED" isolation="DEFAULT"/>
            <tx:method name="find*" read-only="true" propagation="REQUIRED" isolation="DEFAULT"/>
            <tx:method name="insert*" propagation="REQUIRED" isolation="DEFAULT"/>
            <tx:method name="update*" propagation="REQUIRED" isolation="DEFAULT"/>
            <tx:method name="delete*" propagation="REQUIRED" isolation="DEFAULT"/>
        </tx:attributes>

    </tx:advice>

    <!--         进行事务配置-->
    <aop:config>
        <!--        配置切点-->
        <aop:pointcut id="qd" expression="within(com.xdkj.service..*)"/>

        <!--        配置通知-->

        <aop:advisor advice-ref="message" pointcut-ref="qd"></aop:advisor>
    </aop:config>



    <!--      配置spring和mybatis整合-->

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"></property>
        <!--        配置mapper xml文件位置 当接口和xml 不在同位置 则需要配置此项，反之，不需要配置此项-->
        <property name="mapperLocations" value="classpath:com/xdkj/dao/EmpMapper.xml"/>
        <!--        配置别名-->
        <property name="typeAliasesPackage" value="com.xdkj.bean"/>

    </bean>


    <mybatis:scan base-package="com.xdkj.dao"/>


</beans>